# Generated by Django 4.2.7 on 2024-01-26 14:27

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
import website.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('locations', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=50, verbose_name='имя пользователя')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='RU', unique=True, verbose_name='Телефон')),
                ('is_verified', models.BooleanField(default=False, verbose_name='подтвержден')),
                ('groups', models.ManyToManyField(related_query_name='client_group', to='auth.group')),
                ('user_permissions', models.ManyToManyField(related_query_name='client_user_permission', to='auth.permission')),
            ],
            options={
                'verbose_name': 'клиент',
                'verbose_name_plural': 'клиенты',
            },
            managers=[
                ('objects', website.managers.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=70, verbose_name='Фамилия')),
            ],
            options={
                'verbose_name': 'работник',
                'verbose_name_plural': 'работники',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='сумма')),
                ('is_paid', models.BooleanField(default=False, verbose_name='оплачен')),
                ('open_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='дата создания')),
                ('paid_date', models.DateTimeField(blank=True, null=True, verbose_name='дата оплаты')),
            ],
            options={
                'verbose_name': 'платёж',
                'verbose_name_plural': 'платежи',
            },
        ),
        migrations.CreateModel(
            name='Salon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='название')),
                ('address', models.CharField(blank=True, max_length=100, verbose_name='адрес')),
                ('coordinates', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='locations.location', verbose_name='локация')),
            ],
            options={
                'verbose_name': 'салон',
                'verbose_name_plural': 'салоны',
            },
        ),
        migrations.CreateModel(
            name='Speciality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, verbose_name='название')),
            ],
            options={
                'verbose_name': 'специальность',
                'verbose_name_plural': 'специальности',
            },
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(verbose_name='начало')),
                ('end_time', models.DateTimeField(verbose_name='конец')),
                ('is_available', models.BooleanField(db_index=True, default=True, verbose_name='в доступе')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_slots', to='website.employee', verbose_name='мастер')),
                ('salon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='website.salon', verbose_name='салон')),
            ],
            options={
                'verbose_name': 'слот времени',
                'verbose_name_plural': 'слоты времени',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70, verbose_name='название')),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0)], verbose_name='цена')),
                ('speciality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='website.speciality', verbose_name='специальность')),
            ],
            options={
                'verbose_name': 'услуга',
                'verbose_name_plural': 'услуги',
            },
        ),
        migrations.AddField(
            model_name='salon',
            name='employees',
            field=models.ManyToManyField(related_name='orders', through='website.TimeSlot', to='website.employee', verbose_name='работники'),
        ),
        migrations.AddField(
            model_name='employee',
            name='specialties',
            field=models.ManyToManyField(related_name='employees', to='website.speciality', verbose_name='сотрудники'),
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appts', to=settings.AUTH_USER_MODEL, verbose_name='клиент')),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appts', to='website.payment', verbose_name='оплата')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.service', verbose_name='услуга')),
                ('time_slot', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appt', to='website.timeslot', verbose_name='слот')),
            ],
            options={
                'verbose_name': 'запись',
                'verbose_name_plural': 'записи',
            },
        ),
    ]
